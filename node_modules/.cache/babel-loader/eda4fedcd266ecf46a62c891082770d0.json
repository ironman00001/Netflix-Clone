{"ast":null,"code":"var _jsxFileName = \"E:\\\\NETFLIX BUILD\\\\netflix-build\\\\src\\\\Banner.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Banner.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./Requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n\n    fetchData();\n  }, []);\n  console.log(\"游눤游눤游때游때游땘游땘\", movie);\n\n  function truncate(string, n) {\n    return (string === null || string === void 0 ? void 0 : string.length) > n ? string.substr(0, n - 1) + \"...\" : string;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\")`,\n      backgroundPosition: \"center center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__title\",\n        children: \" Movie Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button\",\n          children: \"My List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__description\",\n        children: truncate(`this is a test decription\n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \n                this is a test decription`, 150)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner--fadeBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["E:/NETFLIX BUILD/netflix-build/src/Banner.js"],"names":["React","useState","useEffect","axios","requests","Banner","movie","setMovie","fetchData","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","console","log","truncate","string","n","substr","backgroundSize","backgroundImage","backdrop_path","backgroundPosition"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,QAAR,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAGd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,mBAAeM,SAAf,GACA;AACI,YAAMC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,QAAQ,CAACO,qBAAnB,CAAtB;AAEAJ,MAAAA,QAAQ,CACJE,OAAO,CAACG,IAAR,CAAaC,OAAb,CACIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,OAAO,CAACG,IAAR,CAAaC,OAAb,CAAqBI,MAArC,GAA4C,CAAvD,CADJ,CADI,CAAR;AAKA,aAAOR,OAAP;AACH;;AAEDD,IAAAA,SAAS;AAEZ,GAhBQ,EAgBN,EAhBM,CAAT;AAmBAU,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6Bb,KAA7B;;AAED,WAASc,QAAT,CAAkBC,MAAlB,EAAyBC,CAAzB,EAA2B;AACvB,WAAO,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEJ,MAAR,IAAiBK,CAAjB,GAAqBD,MAAM,CAACE,MAAP,CAAc,CAAd,EAAgBD,CAAC,GAAC,CAAlB,IAAqB,KAA1C,GAAkDD,MAAzD;AACH;;AAIA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AACA,IAAA,KAAK,EAAE;AAECG,MAAAA,cAAc,EAAE,OAFjB;AAGCC,MAAAA,eAAe,EAAG,4CAA2CnB,KAA5C,aAA4CA,KAA5C,uBAA4CA,KAAK,CAAEoB,aAAc,IAHnF;AAICC,MAAAA,kBAAkB,EAAE;AAJrB,KADP;AAAA,4BAUI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBAEEP,QAAQ,CAET;AACjB;AACA;AACA;AACA,0CAN0B,EAOR,GAPQ;AAFV;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgCI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAvEQf,M;;KAAAA,M;AAyET,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport \"./Banner.css\";\r\nimport {useState , useEffect } from \"react\" ;\r\nimport axios from \"./axios\";\r\nimport requests from \"./Requests\";\r\n\r\nfunction Banner() {\r\n\r\n    \r\n    const [movie, setMovie] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        async function fetchData()\r\n        {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            \r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length-1 ) \r\n                ]\r\n            );\r\n            return request ; \r\n        }\r\n       \r\n        fetchData(); \r\n\r\n    }, []);\r\n    \r\n    \r\n    console.log(\"游눤游눤游때游때游땘游땘\" , movie);\r\n\r\n   function truncate(string,n){\r\n       return string?.length > n ? string.substr(0,n-1)+\"...\" : string ; \r\n   }\r\n   \r\n   \r\n   \r\n    return (\r\n        <header className=\"banner\" \r\n        style={{\r\n                 \r\n                backgroundSize: \"cover\" , \r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")` , \r\n                backgroundPosition: \"center center\",\r\n \r\n        }}>\r\n\r\n\r\n            < div className=\"banner__contents\" >\r\n                <h1 className=\"banner__title\"> Movie Name </h1>\r\n                \r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">\r\n                 \r\n                { truncate(\r\n                \r\n                `this is a test decription\r\n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \r\n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \r\n                this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription this is a test decription \r\n                this is a test decription`\r\n                , 150 )}\r\n                </h1>\r\n            \r\n            </div>\r\n\r\n            <div className=\"banner--fadeBottom\" />\r\n            \r\n        </header>\r\n    );\r\n\r\n}\r\n\r\nexport default Banner\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}