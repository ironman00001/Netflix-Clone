{"ast":null,"code":"import _regeneratorRuntime from\"E:/NETFLIX BUILD/netflix-build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/NETFLIX BUILD/netflix-build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/NETFLIX BUILD/netflix-build/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import\"./Row.css\";import{useState,useEffect}from\"react\";import axios from\"./axios\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,_ref$isLargeRow=_ref.isLargeRow,isLargeRow=_ref$isLargeRow===void 0?false:_ref$isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var base_url=\"https://image.tmdb.org/t/p/original/\";useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",Request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);console.log(\"...............................................................>\",movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" \",title]}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return(isLargeRow&&movie.poster_path||!isLargeRow&&movie.backdrop_path)&&/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\" \".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path,\" \"),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["E:/NETFLIX BUILD/netflix-build/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","get","request","data","results","Request","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,OAASC,QAAT,CAAoBC,SAApB,KAAqC,OAArC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,wFAGA,QAASC,CAAAA,GAAT,MAAwD,IAAzCC,CAAAA,KAAyC,MAAzCA,KAAyC,CAAjCC,QAAiC,MAAjCA,QAAiC,sBAAtBC,UAAsB,CAAtBA,UAAsB,0BAAT,KAAS,iBAEpD,cAA+BN,QAAQ,CAAC,EAAD,CAAvC,wCAAQO,MAAR,eAAiBC,SAAjB,eACA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAGAR,SAAS,CAAC,UAAM,SAEGS,CAAAA,SAFH,qIAEZ,qKAC0BR,CAAAA,KAAK,CAACS,GAAN,CAAUN,QAAV,CAD1B,QACUO,OADV,eAEIJ,SAAS,CAACI,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWC,OAHX,wDAFY,4CAQZL,SAAS,GACZ,CATQ,CASN,CAACL,QAAD,CATM,CAAT,CAYCW,OAAO,CAACC,GAAR,CAAa,kEAAb,CAAkFV,MAAlF,EAGD,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,0BAAMH,KAAN,GADJ,cAII,YAAK,SAAS,CAAE,cAAhB,UAEWG,MAAM,CAACW,GAAP,CACG,SAACC,KAAD,QACA,CAAEb,UAAU,EAAIa,KAAK,CAACC,WAArB,EAAsC,CAACd,UAAD,EAAea,KAAK,CAACE,aAA5D,gBACE,YACA,SAAS,uBAAiBf,UAAU,EAAI,kBAA/B,CADT,CAGA,GAAG,YAAOG,QAAP,SAAkBH,UAAU,CAACa,KAAK,CAACC,WAAP,CAAmBD,KAAK,CAACE,aAArD,KAHH,CAIA,GAAG,CAAGF,KAAK,CAACG,IAJZ,EAEKH,KAAK,CAACI,EAFX,CAFF,EADH,CAFX,EAJJ,GADJ,CAuBH,CAED,cAAepB,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport \"./Row.css\";\r\nimport { useState , useEffect } from \"react\" ; \r\nimport axios from \"./axios\";\r\n\r\n\r\nfunction Row({ title , fetchUrl , isLargeRow = false }) {\r\n    \r\n    const [ movies , setMovies ] = useState([]);\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl) ;\r\n            setMovies(request.data.results);\r\n            return Request ; \r\n        }\r\n\r\n        fetchData(); \r\n    }, [fetchUrl]);\r\n    \r\n  \r\n     console.log( \"...............................................................>\" , movies );\r\n    \r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2> {title}</h2>\r\n           \r\n\r\n            <div className =\"row__posters\"> \r\n                      \r\n                      {movies.map(\r\n                          (movie) =>\r\n                          ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.backdrop_path)) && (\r\n                            < img \r\n                            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                            key={movie.id}\r\n                            src ={` ${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path} `}\r\n                            alt ={movie.name}\r\n                            />\r\n                          )\r\n                      )}\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}